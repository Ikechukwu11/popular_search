name: Semi-Auto Build & Release

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

permissions:
  contents: write # ✅ allow pushing tags & creating releases

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # important so tags are fetched

      - name: Get plugin version
        id: get_version
        run: |
          VERSION=$(grep -i "Version:" popular-search.php | sed -E 's/.*Version:[[:space:]]*([0-9.]+).*/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Detected version: $VERSION"

      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION="${{ env.VERSION }}"
          # Grab section from CHANGELOG.md for current version
          LOG=$(awk "/## \\[$VERSION\\]/,/## \\[/" CHANGELOG.md | sed '$d')
          if [ -z "$LOG" ]; then
            LOG="No changelog entry found."
          fi
          echo "LOG<<EOF" >> $GITHUB_ENV
          echo "$LOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "exists=false" >> $GITHUB_ENV
          fi

      - name: Create tag
        if: env.exists == 'false'
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Zip Plugin
        run: |
          mkdir -p dist
          mkdir -p dist/popular-search
          rsync -av --progress ./ dist/popular-search \
            --exclude dist --exclude .git --exclude .github --exclude logs
          cd dist
          zip -r popular-search.zip popular-search

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          body: ${{ env.LOG }} # ✅ include changelog in release
          files: dist/popular-search.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
